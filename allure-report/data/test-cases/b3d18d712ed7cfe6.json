{"uid":"b3d18d712ed7cfe6","name":"Ошибка при создании курьера без имени","fullName":"tests.test_courier_create#test_create_courier_without_first_name","historyId":"c28cfacd380ade389e1048fbb12fe312","time":{"start":1752915698765,"stop":1752915699233,"duration":468},"description":"\n        Проверяет ошибку при создании курьера без имени.\n        Args:\n            courier_api (CourierApi): API клиент.\n        ","descriptionHtml":"<pre><code>    Проверяет ошибку при создании курьера без имени.\n    Args:\n        courier_api (CourierApi): API клиент.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 201 == 400\n +  where 201 = <Response [201]>.status_code","statusTrace":"self = <test_courier_create.TestCourierCreate object at 0x00000238DE71A0D0>\n\n    @allure.title(\"Ошибка при создании курьера без имени\")\n    def test_create_courier_without_first_name(self):\n        \"\"\"\n        Проверяет ошибку при создании курьера без имени.\n        Args:\n            courier_api (CourierApi): API клиент.\n        \"\"\"\n        courier_api = CourierApi()\n        login = generate_random_string(10)\n        password = generate_random_string(10)\n    \n        # Если баг с невалидными данными, пройдет, то курьер тоже будет удален.\n        response = courier_api.create_wrong_courier(login, password, \"\") # тут особенно актуально\n    \n>       assert response.status_code == 400\nE       assert 201 == 400\nE        +  where 201 = <Response [201]>.status_code\n\ntests\\test_courier_create.py:90: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1752915696829,"stop":1752915696951,"duration":122},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"description":"\n        Проверяет ошибку при создании курьера без имени.\n        Args:\n            courier_api (CourierApi): API клиент.\n        ","status":"failed","statusMessage":"AssertionError: assert 201 == 400\n +  where 201 = <Response [201]>.status_code","statusTrace":"self = <test_courier_create.TestCourierCreate object at 0x00000238DE71A0D0>\n\n    @allure.title(\"Ошибка при создании курьера без имени\")\n    def test_create_courier_without_first_name(self):\n        \"\"\"\n        Проверяет ошибку при создании курьера без имени.\n        Args:\n            courier_api (CourierApi): API клиент.\n        \"\"\"\n        courier_api = CourierApi()\n        login = generate_random_string(10)\n        password = generate_random_string(10)\n    \n        # Если баг с невалидными данными, пройдет, то курьер тоже будет удален.\n        response = courier_api.create_wrong_courier(login, password, \"\") # тут особенно актуально\n    \n>       assert response.status_code == 400\nE       assert 201 == 400\nE        +  where 201 = <Response [201]>.status_code\n\ntests\\test_courier_create.py:90: AssertionError","steps":[{"name":"Создание нового курьера с невалидными данными, логин: 'lqstsaqryu'","time":{"start":1752915698765,"stop":1752915699232,"duration":467},"status":"passed","steps":[{"name":"Авторизация курьера с логином: 'lqstsaqryu'","time":{"start":1752915699028,"stop":1752915699107,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"login","value":"'lqstsaqryu'"},{"name":"password","value":"'gdviyjfzee'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":true},{"name":"Удаление курьера с ID: 576289","time":{"start":1752915699107,"stop":1752915699232,"duration":125},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"courier_id","value":"576289"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"login","value":"'lqstsaqryu'"},{"name":"password","value":"'gdviyjfzee'"},{"name":"first_name","value":"''"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":2,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":3,"attachmentStep":false,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"Регистрация курьера"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_courier_create"},{"name":"subSuite","value":"TestCourierCreate"},{"name":"host","value":"WIN-83MOMOE73GI"},{"name":"thread","value":"11220-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_courier_create"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3ebc9f6913451cd6","status":"failed","statusDetails":"AssertionError: assert 201 == 400\n +  where 201 = <Response [201]>.status_code","time":{"start":1752766356068,"stop":1752766356283,"duration":215}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"b3d18d712ed7cfe6.json","parameterValues":[]}